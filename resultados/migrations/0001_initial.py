# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-15 17:57
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('projetos', '__first__'),
        ('agora', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Likedislike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=30)),
                ('relatorio', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Relatorio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[(b'1', b'Geral'), (b'2', b'Quest\xc3\xa3o')], default=b'1', max_length=10)),
                ('titulo', models.CharField(max_length=100)),
                ('conteudo', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Resultado e An\xe1lise')),
                ('publ_date', models.DateTimeField(null=True)),
                ('destaque', models.CharField(default=b'N\xc3\xa3o', max_length=3)),
                ('address', models.CharField(max_length=200)),
                ('published', models.CharField(default=b'N\xc3\xa3o', max_length=3)),
                ('publhistorico', models.CharField(default=b'N\xc3\xa3o', max_length=3)),
                ('like', models.IntegerField(default=0)),
                ('dislike', models.IntegerField(default=0)),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='projetos.Projeto')),
                ('questao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='agora.Question')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
    ]
